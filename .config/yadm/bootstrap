#!/bin/sh

# Init nvm-zsh submodule
# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd "$HOME"

echo "Init submodules"
yadm submodule update --recursive --init

# Load in iTerm2 config
system_type=$(uname -s)

case "$system_type" in
  # -------
  # macOS
  # -------
  "Darwin")
    # make file to indicate OS for cross-shell config compatibility
    touch "$HOME/.darwin"

    # possibly add something here to ensure iTerm2 is installed using Homebrew
    # cask like in the previous example
    if [ -d "$HOME/.iterm2" ]; then
      echo "Setting iTerm preference folder"
      # Specify the preferences directory
      # TODO: not sure if it reads keybinds from here or just the plist file
      defaults write com.googlecode.iterm2.plist PrefsCustomFolder "$HOME/.iterm2"
      # Tell iTerm2 to use the custom preferences in the directory
      defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
    fi

    # install homebrew if it's missing
    if ! command -v brew >/dev/null 2>&1; then
      echo "Installing homebrew"
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    if [ -f "$HOME/.Brewfile" ]; then
      echo "Updating homebrew bundle"
      brew bundle --global
    fi
  ;;

  # -------
  # Linux
  # -------
  "Linux")
    # make file to indicate OS for cross-shell config compatibility
    touch "$HOME/.linux"
  ;;
esac

echo "Now run the command to install oh-my-fish (https://github.com/oh-my-fish/oh-my-fish)"
echo "And run the command to install nvm (https://github.com/nvm-sh/nvm#installing-and-updating"
